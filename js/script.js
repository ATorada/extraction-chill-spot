/*~~~~~~ Variables globales ~~~~~~*/

const gatito = document.getElementById('gatito');
const corazones = document.getElementById('corazones');
const registro = document.getElementById('registro');
const musica = document.getElementById('musica');
const play = document.getElementById("play");
const volumen = document.getElementById("volumen");
const container = document.getElementsByClassName('container')[0];
const audio = document.getElementById("musica");
const fecha = new Date(new Date().setDate(new Date().getDate() + 7)).toUTCString();
let antesDeMute = 0;
let timeout = null;
let cancionActual = 0;
let cookieCargada = false;
let cambiandoDuracion = false;


/* Lista de canciones */
const canciones = [
    "music/ghibli_vibes.mp3",
    "music/summer_vibes.mp3",
    "music/lofi.mp3",
    "music/cafe_vibes.mp3",
];

/* Lista de cumplidos */
const cumplidos = [
    "Eres incre√≠blemente amable.",
    "Tienes un coraz√≥n de oro.",
    "Eres inteligente y talentoso.",
    "Tu positividad es contagiosa.",
    "Gracias por ser siempre tan atento y considerado.",
    "Eres muy especial.",
    "Tus palabras siempre animan a los dem√°s.",
    "Tu amabilidad no conoce l√≠mites.",
    "Eres incre√≠ble.",
    "Tienes un esp√≠ritu amable y generoso.",
    "Eres una persona √∫nica y especial.",
    "Gracias por ser t√∫ mismo, porque eres maravilloso tal como eres.",
    "Tienes una forma √∫nica de hacer que todo sea m√°s divertido.",
    "Tus acciones inspiran a los que te rodean.",
    "Siempre encuentras la manera de hacer que las cosas sean mejores.",
    "La amabilidad que demuestras es una inspiraci√≥n para todos.",
    "Eres un tesoro, alguien verdaderamente especial.",
    "Tu compasi√≥n y comprensi√≥n son invaluables.",
    "Eres un sol que ilumina la vida de los dem√°s.",
    "Tus acciones hablan m√°s que mil palabras, y siempre son amables.",
    "Eres un ejemplo de humildad y buen coraz√≥n.",
    "Gracias por ser siempre tan aut√©ntico y sincero.",
    "Tus palabras siempre tocan los corazones de quienes te escuchan.",
    "Eres una fuente constante de aliento y apoyo para quienes te rodean.",
    "Eres suficiente, tal como eres.",
    "Eres un ejemplo de fortaleza y perseverancia.",
    "Siempre es buen momento para leer un libro sobre caf√©.",
    "El caf√© es la bebida que te hace sentir que todo es posible.",
    "El caf√© es la respuesta, no importa cu√°l sea la pregunta.",
    "El caf√© es la mejor manera de empezar el d√≠a.",
];


/*~~~~~~ Apartado de audio ~~~~~~*/

/* Volumen predeterminado y m√°ximo base*/
audio.volume = 0.1;

/* Gestor de volumen */

/* Permite cambiar el icono del volumen de manera din√°mica */
function cambiarIconoVolumen() {
    if (volumen.value == 0) {
        document.getElementById("sonidoIcono").classList.remove("fa-volume-high");
        document.getElementById("sonidoIcono").classList.remove("fa-volume-low");
        document.getElementById("sonidoIcono").classList.add("fa-volume-xmark");
    } else if (volumen.value < 0.07) {
        document.getElementById("sonidoIcono").classList.remove("fa-volume-high");
        document.getElementById("sonidoIcono").classList.remove("fa-volume-xmark");
        document.getElementById("sonidoIcono").classList.add("fa-volume-low");
    } else {
        document.getElementById("sonidoIcono").classList.remove("fa-volume-low");
        document.getElementById("sonidoIcono").classList.remove("fa-volume-xmark");
        document.getElementById("sonidoIcono").classList.add("fa-volume-high");
    }
}

/* Si existe la cookie de volumen modifica volumen para tener ese value */
window.onload = function () {
    if (document.cookie) {
        let cookies = document.cookie.split(";");
        for (let i = 0; i < cookies.length; i++) {
            if (cookies[i].includes("volumen")) {
                volumen.value = cookies[i].split("=")[1];
                musica.volume = volumen.value;
                cambiarIconoVolumen();
            }
        }
    }
}

/* Modifica el volumen en tiempo real */
volumen.addEventListener("input", function () {
    antesDeMute = volumen.value;
    musica.volume = volumen.value;
    cambiarIconoVolumen();
    document.cookie = "volumen=" + volumen.value + "; expires=" + fecha + "; path=/";
});

/* Permite mutear o desmutear */
document.getElementById("sonidoIcono").addEventListener("click", function () {
    if (volumen.value != 0) {
        antesDeMute = volumen.value;
        volumen.value = 0;
        musica.volume = volumen.value;
        cambiarIconoVolumen();
        document.cookie = "volumen=" + volumen.value + "; expires=" + fecha + "; path=/";
    } else {
        volumen.value = antesDeMute;
        musica.volume = volumen.value;
        cambiarIconoVolumen();
        document.cookie = "volumen=" + volumen.value + "; expires=" + fecha + "; path=/";
    }
});


/*~~~~~~ Apartado del control de la pista ~~~~~~*/

/* Empieza a reproducir la canci√≥n actual */
function reproducirCancionActual() {
    musica.src = canciones[cancionActual];
    musica.play();
}

/* Permite cambiar la canci√≥n  */
function cambiarCancion(direccion, cookie) {
    if (!cookie) {
        cancionActual = parseInt(cancionActual);
        if (direccion === "anterior") {
            cancionActual = (cancionActual - 1 + canciones.length) % canciones.length;
        } else if (direccion === "siguiente") {
            cancionActual = (cancionActual + 1) % canciones.length;
        }
    }
    document.getElementById("icono").style.opacity = 0;
    setTimeout(() => {
        if (canciones[cancionActual] === "music/ghibli_vibes.mp3") {
            document.getElementById("icono").innerHTML = "<b>Ghibli fantasy</b> ‚òî";
        } else if (canciones[cancionActual] === "music/summer_vibes.mp3") {
            document.getElementById("icono").innerHTML = "<b>Summer vibes</b> üåû";
        } else if (canciones[cancionActual] === "music/lofi.mp3") {
            document.getElementById("icono").innerHTML = "<b>Chill time</b> üéß";
        } else if (canciones[cancionActual] === "music/cafe_vibes.mp3") {
            document.getElementById("icono").innerHTML = "<b>Coffee break</b> ‚òï";
        }
        document.getElementById("icono").style.opacity = 1;
    }, 1000);

    if (!cookie) {
        reproducirCancionActual();
        play.children[0].classList.remove("fa-play");
        play.children[0].classList.add("fa-pause");
    } else {
        musica.src = canciones[cancionActual];
    }
    setTimeout(() => {
        document.getElementById("progreso").max = musica.duration;
        if (!cookie) {
            document.getElementById("progreso").value = 0;
        } else {
            document.getElementById("progreso").value = musica.currentTime;
        }

        let minutos = Math.floor(musica.duration / 60);
        let segundos = Math.floor(musica.duration % 60);
        if (segundos < 10) {
            segundos = "0" + segundos;
        }
        document.getElementById("duracion").innerHTML = minutos + ":" + segundos;
        if (isNaN(musica.duration) || isNaN(musica.currentTime)) {
            if (canciones[cancionActual] === "music/ghibli_vibes.mp3") {
                document.getElementById("duracion").innerHTML = "41:03";
            } else if (canciones[cancionActual] === "music/summer_vibes.mp3") {
                document.getElementById("duracion").innerHTML = "31:08";
            } else if (canciones[cancionActual] === "music/lofi.mp3") {
                document.getElementById("duracion").innerHTML = "55:54";
            } else if (canciones[cancionActual] === "music/cafe_vibes.mp3") {
                document.getElementById("duracion").innerHTML = "39:21";
            }
        }
        document.getElementById("info").style.animation = "fadein 2s forwards";
    }, 500);
}

/* Permite cargar la canci√≥n que estabas escuchando */
window.addEventListener("load", function () {
    let minutos = Math.floor(musica.duration / 60);
    let segundos = Math.floor(musica.duration % 60);
    if (segundos < 10) {
        segundos = "0" + segundos;
    }
    //document.getElementById("duracion").innerHTML = minutos + ":" + segundos;
    if (document.cookie && !cookieCargada) {
        let cookies = document.cookie.split(";");
        for (let i = 0; i < cookies.length; i++) {
            if (cookies[i].includes("track")) {
                cancionActual = cookies[i].split("=")[1];
            } else if (cookies[i].includes("tiempo")) {
                musica.currentTime = cookies[i].split("=")[1];
            }
            cambiarCancion("siguiente", true);
        }
    } else {
        cancionActual = 0;
        cambiarCancion("siguiente", true);
    }
    cookieCargada = true;
});

/* Al cargar la p√°gina se establece la duraci√≥n de la p√°gina */
window.addEventListener("load", function () {
    document.getElementById("progreso").max = musica.duration;
    document.getElementById("progreso").min = 0;
});

/* Se encarga de la barra de progreso */
musica.addEventListener("timeupdate", function () {
    if (!cambiandoDuracion) {
        const progreso = (musica.currentTime);
        document.getElementById("progreso").value = progreso;
        document.getElementById("progreso").max = musica.duration;
        let minutos = Math.floor(musica.currentTime / 60);
        let segundos = Math.floor(musica.currentTime % 60);
        if (segundos < 10) {
            segundos = "0" + segundos;
        }
        if (minutos + ":" + segundos === document.getElementById("duracion").innerHTML) {
            cambiarCancion("siguiente");
        }
        document.getElementById("tiempo").innerHTML = minutos + ":" + segundos;
    }
    document.cookie = "track=" + cancionActual + "; expires=" + fecha + "; path=/";
    document.cookie = "tiempo=" + musica.currentTime + "; expires=" + fecha + "; path=/";

});

/* Reproducci√≥n de la siguiente pista al acabar la actual */
musica.addEventListener("ended", function () {
    cambiarCancion("siguiente");
});

/* Funcionamiento del bot√≥n de play */
play.addEventListener("click", function () {
    if (audio.paused) {
        audio.play();
        this.children[0].classList.remove("fa-play");
        this.children[0].classList.add("fa-pause");
    } else {
        audio.pause();
        this.children[0].classList.remove("fa-pause");
        this.children[0].classList.add("fa-play");
    }
});

/* Permite o bloquea que se cambie el progreso de la canci√≥n */
document.addEventListener("mousedown", function () {
    cambiandoDuracion = true;
});

document.addEventListener("mouseup", function () {
    cambiandoDuracion = false;
});

/* Permite cambiar el momento de la canci√≥n en tiempo real */
document.getElementById("progreso").addEventListener("input", function () {
    musica.currentTime = (this.value);
});

/* Permite cambiar el tiempo de la canci√≥n en tiempo real */
document.getElementById("progreso").addEventListener("input", function () {
    let minutos = Math.floor(this.value / 60);
    let segundos = Math.floor(this.value % 60);
    if (segundos < 10) {
        segundos = "0" + segundos;
    }
    document.getElementById("tiempo").innerHTML = minutos + ":" + segundos;
});


/*~~~~~~ Apartado de cumplidos ~~~~~~*/

/* Muestra el primer cumplido */
function mostrarCumplido(event) {
    const x = event.clientX - event.target.offsetLeft;
    const y = event.clientY - event.target.offsetTop;

    /* Crea y a√±ade el cumplido */
    const cumplido = document.createElement('span');
    cumplido.classList.add('cumplido');
    cumplido.style.left = `${x}px`;
    cumplido.style.top = `${y}px`;
    cumplido.innerHTML = cumplidos[Math.floor(Math.random() * cumplidos.length)];

    registro.appendChild(cumplido);

}

/* Agrega el siguiente cumplido */
function agregarCumplido(cumplido) {
    registro.innerHTML = '';
    const cumplidoElement = document.createElement('span');
    cumplidoElement.classList.add('cumplido');
    cumplidoElement.innerHTML = cumplido;
    cumplidoElement.style.transition = 'opacity 0.5s ease-in-out';
    cumplidoElement.style.opacity = 0;
    registro.appendChild(cumplidoElement);
    setInterval(() => {
        cumplidoElement.style.opacity = 1;
    }, 100);
}

/* Temporiza cuando volver√° de jugar el gato */
function crearTimeout() {
    /* Si ya se le est√° dando amor se resetea el contador para jugar */
    if (timeout) {
        clearTimeout(timeout);
    }
    /* Crea el retorno del gatito al acto de jugar */
    timeout = setTimeout(() => {
        /* Cambia el gatito */
        gatito.style.opacity = 0;
        setTimeout(() => {
            gatito.src = "img/gato_jugando.gif";
            gatito.style.opacity = 1;
            container.style.animation = "girar 5s infinite linear , fondoGatito 5s infinite linear";
            corazones.style.opacity = 0;
        }, 1000);
        /* Oculta los corazones y los cumplidos */
        corazones.classList.add('hidden');
        registro.style.opacity = 0;
        registro.style.transition = 'opacity 1s';

        /* Crea un cumplido oculto por mi TOC a que se muevan las cosas */
        setTimeout(() => {
            registro.innerHTML = '';
            registro.style.opacity = 1;
            let span = document.createElement("span");
            span.style.opacity = 0;
            span.innerHTML = "¬°Eres muy listo uwu!";
            registro.appendChild(span);
            gatito.style.marginTop = "0px";
            gatito.style.marginLeft = "0px";
        }, 1000);
    }, 5000);
}

/* Crea corazones aleatorios de diferentes formas, posiciones y efectos */
function mostrarCorazones(event) {
    const x = event.clientX - event.target.offsetLeft;
    const y = event.clientY - event.target.offsetTop;

    const corazon = document.createElement('span');
    corazon.classList.add('corazon');
    corazon.style.left = `${x}px`;
    corazon.style.top = `${y}px`;
    let listaCorazones = ["üíö","ü§é","‚òï", "üå±","üåø"];
    corazon.innerHTML = listaCorazones[Math.floor(Math.random() * listaCorazones.length)];
    const size = Math.random() * 35 + 15;
    corazon.style.width = `${size}px`;
    corazones.appendChild(corazon);

    corazon.style.zIndex = 1000;
    corazon.style.opacity = 0.7;
    corazon.style.display = "absolute";
    corazon.style.left = `${x + Math.random() * 100 - 50}px`;
    corazon.style.top = `${y + Math.random() * 100 - 50}px`;

    /* Tiempo despu√©s el coraz√≥n desaparece de manera aleatoria */
    setTimeout(() => {
        corazon.style.opacity = 0;
        setTimeout(() => {
            corazon.remove();
        }, Math.random() * 4000 + 1000);
    }, Math.random() * 4000 + 1000);

    crearTimeout();

    gatito.style.marginTop = "40px";
    gatito.style.marginLeft = "25px";

    /* Por cada coraz√≥n mostrado se actualiza el piropo */
    agregarCumplido(cumplidos[Math.floor(Math.random() * cumplidos.length)]);
}

/* Cuando le das click al gatito se empiezan a mostrar los corazones y el gatito est√° feliz */
gatito.addEventListener('click', () => {
    if (corazones.classList.contains('hidden')) {
        corazones.classList.remove('hidden');
        gatito.style.opacity = 0;
        setTimeout(() => {
            gatito.src = "img/gato_feliz.gif";
            gatito.style.opacity = 1;
            corazones.style.opacity = 1;
            container.style.animation = "fondoGatito 5s infinite linear";
        }, 1000);
    }

    mostrarCorazones(event);
});